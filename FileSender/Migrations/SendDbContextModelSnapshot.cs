// <auto-generated />
using System;
using FileSender.EfModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FileSender.Migrations
{
    [DbContext(typeof(SendDbContext))]
    partial class SendDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FileSender.EfModels.FileContent", b =>
                {
                    b.Property<Guid>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<byte[]>("FileContent1")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FileContent");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("FileUploadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FileId");

                    b.HasIndex("FileUploadId");

                    b.ToTable("FileContents");
                });

            modelBuilder.Entity("FileSender.EfModels.FileUpload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsViewed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("FileUpload", (string)null);
                });

            modelBuilder.Entity("FileSender.EfModels.FileContent", b =>
                {
                    b.HasOne("FileSender.EfModels.FileUpload", "FileUpload")
                        .WithMany("FileContents")
                        .HasForeignKey("FileUploadId")
                        .IsRequired()
                        .HasConstraintName("FK__FileConte__FileU__2A4B4B5E");

                    b.Navigation("FileUpload");
                });

            modelBuilder.Entity("FileSender.EfModels.FileUpload", b =>
                {
                    b.Navigation("FileContents");
                });
#pragma warning restore 612, 618
        }
    }
}
